using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Mech.Ui;

[GenerateTypedNameReferences]
public sealed partial class MechEquipmentControl : Control
{
    public event Action? OnRemoveButtonPressed;

    public void SetRemoveDisabled(bool disabled)
    {
        RemoveButton.Disabled = disabled;
        if (disabled)
            RemoveButton.ToolTip = Loc.GetString("mech-remove-disabled-tooltip");
        else
            RemoveButton.ToolTip = null;
    }

    public MechEquipmentControl(EntityUid entity, string itemName, Control? fragment, int size)
    {
        RobustXamlLoader.Load(this);
        EquipmentName.SetMessage(itemName);
        EquipmentSize.Text = $"[{size}]";
        EquipmentView.SetEntity(entity);
        RemoveButton.TexturePath = "/Textures/Interface/Nano/cross.svg.png";
        SetRemoveDisabled(true);

        if (fragment != null)
        {
            Separator.Visible = true;
            CustomControlContainer.AddChild(fragment);
        }

        RemoveButton.OnPressed += _ => OnRemoveButtonPressed?.Invoke();
    }
}

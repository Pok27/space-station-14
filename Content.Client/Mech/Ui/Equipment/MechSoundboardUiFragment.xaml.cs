using Content.Shared.Mech;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Mech.Ui.Equipment;

/// <summary>
/// UI fragment for the mech soundboard equipment.
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class MechSoundboardUiFragment : BoxContainer
{
    [Dependency] private readonly ILocalizationManager _loc = default!;

    public event Action<int>? OnPlayAction;

    public MechSoundboardUiFragment()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void UpdateContents(MechSoundboardUiState state)
    {
        // Clear existing sounds
        Sounds.Clear();

        // Add available sounds
        for (var i = 0; i < state.Sounds.Count; i++)
        {
            var soundIndex = i; // Capture for closure
            var soundId = state.Sounds[i];
            var localizedName = _loc.GetString($"mech-soundboard-{soundId}");

            var item = Sounds.AddItem(localizedName);
            item.OnSelected += _ => OnPlayAction?.Invoke(soundIndex);
        }
    }
}

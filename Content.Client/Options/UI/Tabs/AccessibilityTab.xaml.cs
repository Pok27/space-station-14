using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;

namespace Content.Client.Options.UI.Tabs;

[GenerateTypedNameReferences]
public sealed partial class AccessibilityTab : Control
{
    [Dependency] private readonly IConfigurationManager _cfg = default!;

    public AccessibilityTab()
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        Control.AddOptionCheckBox(CCVars.ChatEnableColorName, EnableColorNameCheckBox);
        Control.AddOptionCheckBox(CCVars.AccessibilityColorblindFriendly, ColorblindFriendlyCheckBox);
        Control.AddOptionCheckBox(CCVars.ReducedMotion, ReducedMotionCheckBox);
        Control.AddOptionPercentSlider(CCVars.ScreenShakeIntensity, ScreenShakeIntensitySlider);
        Control.AddOptionPercentSlider(CCVars.ChatWindowOpacity, ChatWindowOpacitySlider);
        Control.AddOptionPercentSlider(CCVars.SpeechBubbleTextOpacity, SpeechBubbleTextOpacitySlider);
        Control.AddOptionPercentSlider(CCVars.SpeechBubbleSpeakerOpacity, SpeechBubbleSpeakerOpacitySlider);
        Control.AddOptionPercentSlider(CCVars.SpeechBubbleBackgroundOpacity, SpeechBubbleBackgroundOpacitySlider);
        Control.AddOptionCheckBox(CCVars.ChatAutoFillHighlights, AutoFillHighlightsCheckBox);
        Control.AddOptionColorSlider(CCVars.ChatHighlightsColor, HighlightsColorSlider);
        Control.AddOptionCheckBox(CCVars.AccessibilityHeatDistortion, HeatDistortionCheckBox);

        Control.AddOptionCheckBox(CCVars.AccessibilityClientCensorNudity, CensorNudityCheckBox);

        Control.Initialize();

        _cfg.OnValueChanged(CCVars.AccessibilityHeatDistortion, cvar => HeatDistortionCheckBox.Pressed = cvar);
    }
}


using System.Numerics;
using Content.Client.Tips;
using Content.Shared.Access.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;
using TerraFX.Interop.Xlib;

namespace Content.Client.SpecializationConsole.EmployeeData;

[GenerateTypedNameReferences]
public sealed partial class EmployeeData : Control
{
    [Dependency] private readonly IEntityManager _entManager = default!;
    [Dependency] private readonly IGameTiming _gameTiming = default!;
    private SpriteView? _spriteView;

    private readonly Direction[] _order4 =
    {
        Direction.South, Direction.East, Direction.North, Direction.West
    };

    private int _idx;
    private TimeSpan _nextTurnAt = TimeSpan.Zero;
    public TimeSpan _period = TimeSpan.FromSeconds(0.7);

    public EmployeeData()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
    }

    public void SetInfo(string? entName, string? jobTitle, string? jobSpec)
    {
        EmployeeNameLabel.Text = entName ?? string.Empty;
        EmployeeJobLabel.Text = jobTitle ?? string.Empty;
        EmployeeSpecLabel.Text = jobSpec ?? string.Empty;
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        if (_spriteView == null)
            return;
        var curTime = _gameTiming.CurTime;
        if (_nextTurnAt == TimeSpan.Zero)
            _nextTurnAt = curTime + _period;

        if (curTime < _nextTurnAt)
            return;

        _nextTurnAt += _period;
        _idx = (_idx + 1) % _order4.Length;
        if (_spriteView != null)
            _spriteView.OverrideDirection = _order4[_idx];
    }

    public void SetSprite(EntityUid? uid)
    {
        _idx = 0;
        _nextTurnAt = TimeSpan.Zero;
        EntityViewBox.DisposeAllChildren();

        var spriteView = new SpriteView
        {
            Scale = new Vector2(3f, 3f),
            MaxSize = new Vector2(112, 112),
            Stretch = SpriteView.StretchMode.Fill,
        };
        spriteView.SetEntity(uid);

        LayoutContainer.SetAnchorAndMarginPreset(
            spriteView,
            LayoutContainer.LayoutPreset.TopRight);

        EntityViewBox.AddChild(spriteView);

        _spriteView = spriteView;
    }
}
